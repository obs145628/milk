
[V0]

The standard library is a set of functions and types defined outside of the language.
They are almost like any other module files written from the user.

At the exception that they use some features not possible for the user: 
- struct can contain a ref.
- function can return a ref.
- implementation can use native code




putchar(c: i32): i32
Wrapper for putchar (3)

getchar(): i32
Wrapper for getchar (3)











[V0-HACK]

v0h_infinite_ref(x: T): & T
Move an object to heap allocated space, and returns a ref.
This object is never deleted.

v0h_infinite_array_ref(len: usize, x: &const T): &[] T
Create a new array in heap allocated space, of size len, with all values initizalied at x.
The bytes of x are simply copied to every element of the array, no matter the behavior of copy/clone
This array is never deleted.

[V???]
Specials functions
@TODO: which version ?

fn swap(x: T&, y: T&) : void

Exchange the bytes of the 2 vars (x and y)

fn take(x: T&) : T

T must implement the Default concept, move x to the return value, and set x to the default value.


[V???]
String class
@TODO: which version ?

class String
{
	char[] data;
	size_t size
};
